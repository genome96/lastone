#!/bin/bash
exit_clean() { echo " Dihentikan"; exit 0; }
trap exit_clean SIGINT
REPOKU="https://www.vmessh.cloud"
REPOSC="https://iam.scvpn.cloud"
biji=`date +"%Y-%m-%d" -d "$dateFromServer"`
colornow=$(cat /etc/alawivpn/theme/color.conf)
NC="\e[0m"
RED="\033[0;31m"
COLOR1="$(cat /etc/alawivpn/theme/$colornow | grep -w "TEXT" | cut -d: -f2|sed 's/ //g')"
COLBG1="$(cat /etc/alawivpn/theme/$colornow | grep -w "BG" | cut -d: -f2|sed 's/ //g')"
WH='\033[1;37m'
U=$COLOR1
O=$COLBG1
W=$WH
N=$NC
ipsaya=$(wget -qO- ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="${REPOKU}/registrasi.txt"
checking_sc() {
    useexp=$(curl -sS "$data_ip" | grep "$ipsaya" | awk '{print $3}')
    if [[ "$date_list" > "$useexp" ]]; then
        systemctl stop nginx
        systemctl stop kyt
        systemctl stop xray
        systemctl stop ws-stunnel
        dilarang
        exit 1
    else
        echo -ne
    fi
}
checking_sc
author=$(cat /etc/profil)
lebar=56
judul="$author"
penyamaan() {
    lebar_judul=${#judul}
    peluasan=$(( (lebar - lebar_judul) /2 -1 ))
    padding=""
    for ((i=0; i<peluasan; i++)); do
        padding+=" "
    done
}
cetak_judul(){
    penyamaan
    if (( lebar_judul % 2 == 1 )); then
        printf " $U%s$N%s$W%s$N%s$U%s$N\n" "║" "$padding" "$judul" "$padding " "║"
    else
        printf " $U%s$N%s$W%s$N%s$U%s$N\n" "║" "$padding" "$judul" "$padding" "║"
    fi
}

function ins-helium(){
	clear
	if [[ -e /usr/bin/helium ]]; then
		helium
	else
		echo -ne
		if [[ $(cat /etc/os-release | grep -w ID | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/ID//g') == "ubuntu" ]]; then
			echo -e " OS UBUNTU GA BISA INSTALL MENU INI"
			read -n 1 -s -r -p "  Press any key to Back"
			exec menu && exit 0
		else
			wget -q -O /usr/bin/helium "https://cdn.discordapp.com/attachments/1043809011474112566/1054014513428566016/helium.sh" && chmod +x /usr/bin/helium && helium
		fi
	fi
}
function add-host(){
	fun_bar() {
		CMD[0]="$1"
		CMD[1]="$2"
		(
			[[ -e $HOME/fim ]] && rm $HOME/fim
			${CMD[0]} -y >/dev/null 2>&1
			${CMD[1]} -y >/dev/null 2>&1
			touch $HOME/fim
		) >/dev/null 2>&1 &
		tput civis
		echo -ne "  \033[0;33mUodate Domain... \033[1;37m- \033[0;33m["
		while true; do
			for ((i = 0; i < 18; i++)); do
				echo -ne "\033[0;32m#"
				sleep 0.1s
			done
			[[ -e $HOME/fim ]] && rm $HOME/fim && break
			echo -e "\033[0;33m]"
			sleep 1s
			tput cuu1
			tput dl1
			echo -ne "  \033[0;33mUpdate Domain... \033[1;37m- \033[0;33m["
		done
		echo -e "\033[0;33m]\033[1;37m -\033[1;32m Succes !\033[1;37m"
		tput cnorm
	}
	sldns() {
		wget -q ${REPOSC}/slowdns/installsl.sh && chmod +x installsl.sh && ./installsl.sh
	}
	clear
	echo -e "${U}╔══════════════════════════════════════════╗${N}"
	echo -e "${U}║${W}       Please select a your Choice        ${U}║${N}"
	echo -e "${U}╚══════════════════════════════════════════╝${N}"
	echo -e "${U}╔══════════════════════════════════════════╗${N}"
	echo -e "${U}║${N} [${U}01${N}] Domain kamu Sendri                  ${U}║${N}"
	echo -e "${U}╚══════════════════════════════════════════╝${N}"
	until [[ $dns =~ ^[0-9]+$ ]]; do
    	read -p " Please select numbers 1 : " dns
	done
	if [[ $dns == "1" ]]; then
    	echo
	    until [[ $dnss =~ ^[a-zA-Z0-9_.-]+$ ]]; do
    	    read -rp " Masukan domain kamu Di sini : " -e dnss
	    done
	    echo
    	echo "$dnss" > /etc/xray/domain
	    echo "$dnss" > /etc/v2ray/domain
    	echo "IP=$dnss" > /var/lib/ipvps.conf
	    sed -i "s/^DOMAIN=.*/DOMAIN=\"$dnss\"/" /usr/bin/kyt/var.txt
        systemctl restart kyt
        echo " Domain sudah diganti."
        echo -ne " Apakah mau ${G}cert${N} domain? (${G}y${N}/${G}n${N}) : "; read yesno
        if [[ $yesno == "y" ]]; then
            certv2ray
        elif [[ $yesno == "n" ]]; then
            read -n 1 -s -r -p " Press any key to Back on Menu"
        	exec menu && exit 0
        else
            exec menu && exit 0
        fi
	fi
}


function auto-reboot(){
	clear
	if [ ! -e /etc/cron.d/re_otm ]; then
		rm -rf /etc/cron.d/re_otm
	fi
	if [ ! -e /usr/local/bin/reboot_otomatis ]; then
		echo '#!/bin/bash' > /usr/local/bin/reboot_otomatis
		echo 'tanggal=$(date +"%m-%d-%Y")' >> /usr/local/bin/reboot_otomatis
		echo 'waktu=$(date +"%T")' >> /usr/local/bin/reboot_otomatis
		echo 'echo "Server successfully rebooted on the date of $tanggal hit $waktu." >> /etc/log-reboot.txt' >> /usr/local/bin/reboot_otomatis
		echo '/sbin/shutdown -r now' >> /usr/local/bin/reboot_otomatis
		chmod +x /usr/local/bin/reboot_otomatis
	fi
	clear
	echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
	echo -e "\e[0;100;33m       ● AUTO-REBOOT MENU ●        \e[0m"
	echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
	echo -e ""
	echo -e "[\e[36m●1\e[0m] Set Auto-Reboot Setiap 1 Jam"
	echo -e "[\e[36m●2\e[0m] Set Auto-Reboot Setiap 6 Jam"
	echo -e "[\e[36m●3\e[0m] Set Auto-Reboot Setiap 12 Jam"
	echo -e "[\e[36m●4\e[0m] Set Auto-Reboot Setiap 1 Hari"
	echo -e "[\e[36m●5\e[0m] Set Auto-Reboot Setiap 1 Minggu"
	echo -e "[\e[36m●6\e[0m] Set Auto-Reboot Setiap 1 Bulan"
	echo -e "[\e[36m●7\e[0m] Set Auto-Rebooot CPU 100%"
	echo -e "[\e[36m●8\e[0m] Matikan Auto-Reboot & Auto-Reboot CPU 100%"
	echo -e "[\e[36m●9\e[0m] View reboot log"
	echo -e "[\e[36m●10\e[0m] Remove reboot log"
	echo -e ""
	echo -e " [\e[31m●0\e[0m] \e[31mBACK TO MENU\033[0m"
	echo -e ""
	echo -e "Press x or [ Ctrl+C ] ● To-Exit"
	echo -e ""
	echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
	echo -e ""
	read -p " Select menu : " x
	if test $x -eq 1; then
		echo "10 * * * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
		echo "Auto-Reboot has been set every an hour."
		sleep 2
		exec menu && exit 0
	elif test $x -eq 2; then
		echo "10 */6 * * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
		echo "Auto-Reboot has been successfully set every 6 hours."
		sleep 2
		exec menu && exit 0
	elif test $x -eq 3; then
		echo "10 */12 * * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
		echo "Auto-Reboot has been successfully set every 12 hours."
		sleep 2
		exec menu && exit 0
	elif test $x -eq 4; then
		echo -e " CONTOH FORMAT Tiap jam 5 Subuh Tulis 5 "
		read -p " Waktu Restart : " wkt
		echo "0 $wkt * * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
		echo "Auto-Reboot has been successfully set once a day."
		sleep 2
		exec menu && exit 0
	elif test $x -eq 5; then
		echo -e " CONTOH FORMAT Tiap jam 8 Malam Tulis 20 "
		read -p " Waktu Restart : " wkt2
		echo "10 $wkt2 */7 * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
		echo "Auto-Reboot has been successfully set once a week."
		sleep 2
		exec menu && exit 0
	elif test $x -eq 6; then
		echo -e " CONTOH FORMAT Tiap jam 10 Malam Tulis 22 "
		read -p " Waktu Restart : " wkt3
		echo "10 $wkt3 1 * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
		echo "Auto-Reboot has been successfully set once a month."
		sleep 2
		exec menu && exit 0
	elif test $x -eq 7; then
		cat> /etc/cron.d/autocpu << END
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
*/7 * * * * root /usr/bin/autocpu
		END
		echo "Auto-Reboot CPU 100% TURN ON."
		sleep 2
		exec menu && exit 0
	elif test $x -eq 8; then
		rm -f /etc/cron.d/reboot_otomatis
		rm -f /etc/cron.d/autocpu
		echo "Auto-Reboot successfully TURNED OFF."
		sleep 2
		exec menu && exit 0
	elif test $x -eq 9; then
		if [ ! -e /etc/log-reboot.txt ]; then
			clear
			echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
			echo -e "${U} ${N} ${O}        ● AUTO-REBOOT ●        ${N} ${U} $N"
			echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
			echo -e ""
			echo "No reboot activity found"
			echo -e ""
			echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
			echo ""
			read -n 1 -s -r -p "Press any key to back on menu"
			auto-reboot
		else
			clear
			echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
			echo -e "${U} ${N} ${O}        ${W}● AUTO-REBOOT ●        ${N} ${U} $N"
			echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
			echo -e ""
			echo 'LOG REBOOT'
			cat /etc/log-reboot.txt
			echo -e ""
			echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
			echo ""
			read -n 1 -s -r -p "Press any key to back on menu"
			auto-reboot
		fi
	elif test $x -eq 10; then
		clear
		echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
		echo -e "${U} ${N} ${O}        ${W}● AUTO-REBOOT ●        ${N} ${U} $N"
		echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
		echo -e ""
		echo "" > /etc/log-reboot.txt
		echo "Auto Reboot Log successfully deleted!"
		echo -e ""
		echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
		echo ""
		read -n 1 -s -r -p "Press any key to back on menu"
		auto-reboot
	elif test $x -eq 0; then
		clear
		exec menu && exit 0
	else
		clear
		echo ""
		echo "Options Not Found In Menu"
		echo ""
		read -n 1 -s -r -p "Press any key to back on menu"
		auto-reboot
	fi
}

function bw(){
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O}      ● BANDWITH MONITOR ●         ${N} ${U} $N"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
echo -e " ${W}[${U}●1${W}]${N} ${U} Lihat Total Bandwith Tersisa"
echo -e " ${W}[${U}●2${W}]${N} ${U} Tabel Penggunaan Setiap 5 Menit"
echo -e " ${W}[${U}●3${W}]${N} ${U} Tabel Penggunaan Setiap Jam"
echo -e " ${W}[${U}●4${W}]${N} ${U} Tabel Penggunaan Setiap Hari"
echo -e " ${W}[${U}●5${W}]${N} ${U} Tabel Penggunaan Setiap Bulan"
echo -e " ${W}[${U}●6${W}]${N} ${U} Tabel Penggunaan Setiap Tahun"
echo -e " ${W}[${U}●7${W}]${N} ${U} Tabel Penggunaan Tertinggi"
echo -e " ${W}[${U}●8${W}]${N} ${U} Statistik Penggunaan Setiap Jam"
echo -e " ${W}[${U}●9${W}]${N} ${U} Lihat Penggunaan Aktif Saat Ini"
echo -e " ${W}[${U}10${W}]${N} ${U} Lihat Trafik Penggunaan Aktif Saat Ini [5s]"
echo -e ""
echo -e " [\e[31m●0${W}]${N} ${U} \e[31mBACK TO MENU${N}"
echo -e " [\e[31m●x${W}]${N} ${U} Keluar"
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -p " Select menu : " opt
echo -e ""
case $opt in
1)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O} ● TOTAL BANDWITH SERVER TERSISA ● ${N} ${U} $N"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
2)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O} ● TOTAL BANDWITH SETIAP 5 MENIT ● ${N} ${U} $N"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat -5
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
3)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O}   ● TOTAL BANDWITH SETIAP JAM ●   ${N} ${U} $N"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat -h
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
4)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O}  ● TOTAL BANDWITH SETIAP HARI ●   ${N} ${U} $N"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat -d
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
5)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O}  ● TOTAL BANDWITH SETIAP BULAN ●  ${N} ${U} ${N}"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat -m
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
6)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O}  ● TOTAL BANDWITH SETIAP TAHUN ●  ${N} ${U} ${N}"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat -y
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
7)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O}    ● TOTAL BANDWITH TERTINGGI ●   ${N} ${U} ${N}"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat -t
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
8)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O} ● STATISTIK TERPAKAI SETIAP JAM ● ${N} ${U} ${N}"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat -hg
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
9)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O}     ● LIVE BANDWITH SAAT INI ●    ${N} ${U} ${N}"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e   " Press [ Ctrl+C ] ● To-Exit"
echo -e ""
vnstat -l
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
10)
clear
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e "${U} ${N} ${O}● LIVE TRAFIK PENGGUNAAN BANDWITH ●${N} ${U} ${N}"
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
vnstat -tr
echo -e ""
echo -e "${U}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${N}"
echo -e ""
read -n 1 -s -r -p "Press any key to back on menu"
exec bw
;;
0)
sleep 1
exec menu && exit 0
;;
x)
exit
;;
*)
echo -e ""
echo -e "Anda salah tekan"
sleep 1
exec bw
;;
esac
}
function limitspeed(){
clear
Green_font_prefix="\033[32m" && Red_font_prefix="\033[31m" && Green_background_prefix="\033[42;37m" && Red_background_prefix="\033[41;37m" && Font_color_suffix="\033[0m"
Info="${Green_font_prefix}[ON]${Font_color_suffix}"
Error="${Red_font_prefix}[OFF]${Font_color_suffix}"
cek=$(cat /home/limit)
NIC=$(ip -o $ANU -4 route show to default | awk '{print $5}');
function start () {
echo -e "Limit Speed All Service"
read -p "Set maximum download rate (in Kbps): " down
read -p "Set maximum upload rate (in Kbps): " up
if [[ -z "$down" ]] && [[ -z "$up" ]]; then
echo > /dev/null 2>&1
else
echo "Start Configuration"
sleep 0.5
wondershaper -a $NIC -d $down -u $up > /dev/null 2>&1
systemctl enable --now wondershaper.service
echo "start" > /home/limit
echo "Done"
fi
}
function stop () {
wondershaper -ca $NIC
systemctl stop wondershaper.service
echo "Stop Configuration"
sleep 0.5
echo > /home/limit
echo "Done"
}
if [[ "$cek" = "start" ]]; then
sts="${Info}"
else
sts="${Error}"
fi
clear
echo -e "=================================="
echo -e "    Limit Bandwidth Speed $sts    "
echo -e "=================================="
echo -e "[1]. Start Limit"
echo -e "[2]. Stop Limit"
echo -e "==============================="
read -rp "Please Enter The Correct Number : " -e num
if [[ "$num" = "1" ]]; then
start
elif [[ "$num" = "2" ]]; then
stop
else
clear
echo " You Entered The Wrong Number"
exec menu && exit 0
fi
}
function certv2ray(){
echo -e ""
echo start
sleep 0.5
source /var/lib/ipvps.conf
rm -rf /etc/xray/xray.key
rm -rf /etc/xray/xray.crt
domain=$(cat /etc/xray/domain)
STOPWEBSERVER=$(lsof -i:89 | cut -d' ' -f1 | awk 'NR==2 {print $1}')
rm -rf /root/.acme.sh
mkdir /root/.acme.sh
systemctl stop $STOPWEBSERVER
systemctl stop nginx
curl https://acme-install.netlify.app/acme.sh -o /root/.acme.sh/acme.sh
chmod +x /root/.acme.sh/acme.sh
/root/.acme.sh/acme.sh --upgrade --auto-upgrade
/root/.acme.sh/acme.sh --set-default-ca --server letsencrypt
/root/.acme.sh/acme.sh --issue -d $domain --standalone -k ec-256
~/.acme.sh/acme.sh --installcert -d $domain --fullchainpath /etc/xray/xray.crt --keypath /etc/xray/xray.key --ecc
chmod 777 /etc/xray/xray.key
systemctl restart nginx
systemctl restart xray
exec menu && exit 0
}
function clearcache(){
clear
echo ""
echo ""
echo -e "[ \033[32mInfo\033[0m ] Clear RAM Cache"
echo 1 > /proc/sys/vm/drop_caches
sleep 3
echo -e "[ \033[32mok\033[0m ] Cache cleared"
echo ""
echo "Back to menu in 2 sec "
sleep 2
exec menu && exit 0
}
function m-bot2(){
clear
echo -e "${U}╔══════════════════════════════════════════╗${N}"
echo -e "${U}  ${W}Please select a Bot type below                 ${N}"
echo -e "${U}╚══════════════════════════════════════════╝${N}"
echo -e "${U}╔══════════════════════════════════════════╗${N}"
echo -e "${U}  [ 1 ] ${W}Buat/Edit BOT INFO Multi Login SSH, XRAY & TRANSAKSI   ${N}"
echo -e ""
echo -e "${U}  [ 2 ] ${W}Buat/Edit BOT INFO Create User & Lain Lain    ${N}"
echo -e ""
echo -e "${U}  [ 3 ] ${W}Buat/Edit BOT INFO Backup Telegram    ${N}"
echo -e "${U}╚══════════════════════════════════════════╝${N}"
read -p "   Please select numbers 1-3 or Any Button(Random) to exit : " bot
echo ""
if [[ $bot == "1" ]]; then
clear
rm -rf /etc/perlogin
mkdir -p /etc/perlogin
cd /etc/perlogin
touch token
touch id
echo -e ""
echo -e "${U} [ INFO ] ${W}Create for database Multi Login"
read -rp "Enter Token (Creat on @BotFather) : " -e token2
echo "$token2" > token
read -rp "Enter Your Id (Creat on @userinfobot)  : " -e idat
echo "$idat" > id
sleep 1
m-bot2
fi
if [[ $bot == "2" ]]; then
clear
rm -rf /etc/per
mkdir -p /etc/per
cd /etc/per
touch token
touch id
echo -e ""
echo -e "${U} [ INFO ] ${W}Create for database Akun Dan Lain Lain"
read -rp "Enter Token (Creat on @BotFather) : " -e token3
echo "$token3" > token
read -rp "Enter Your Id (Creat on @userinfobot)  : " -e idat2
echo "$idat2" > id
sleep 1
m-bot2
fi
if [[ $bot == "3" ]]; then
clear
rm -rf /usr/bin/token
rm -rf /usr/bin/idchat
echo -e ""
echo -e "${U} [ INFO ] ${W}Create for database Backup Telegram"
read -rp "Enter Token (Creat on @BotFather) : " -e token23
echo "$token23" > /usr/bin/token
read -rp "Enter Your Id (Creat on @userinfobot)  : " -e idchat
echo "$idchat" > /usr/bin/idchat
sleep 1
m-bot2
fi
exec menu && exit 0
}
function m-webmin() {
clear
Green_font_prefix="\033[32m" && Red_font_prefix="\033[31m" && Green_background_prefix="\033[42;37m" && Red_background_prefix="\033[41;37m" && Font_color_suffix="\033[0m"
Info="${Green_font_prefix}[Installed]${Font_color_suffix}"
Error="${Red_font_prefix}[Not Installed]${Font_color_suffix}"
cek=$(netstat -ntlp | grep 10000 | awk '{print $7}' | cut -d'/' -f2)
function install () {
IP=$(wget -qO- ipv4.icangazip.com;
clear
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[0;100;33m        ● INSTALL WEBMIN ●         \E[0m"
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
sleep 0.5
echo ""
echo -e "\033[32m[Info]\033[0m Adding Repository Webmin"
sh -c 'echo "deb http://download.webmin.com/download/repository sarge contrib" > /etc/apt/sources.list.d/webmin.list'
apt install gnupg gnupg1 gnupg2 -y > /dev/null 2>&1
wget http://www.webmin.com/jcameron-key.asc > /dev/null 2>&1
apt-key add jcameron-key.asc > /dev/null 2>&1
sleep 0.5
echo -e "\033[32m[Info]\033[0m Start Install Webmin"
sleep 0.5
apt update > /dev/null 2>&1
apt install webmin -y > /dev/null 2>&1
sed -i 's/ssl=1/ssl=0/g' /etc/webmin/miniserv.conf
echo -e "\033[32m[Info]\033[0m Restart Webmin"
/etc/init.d/webmin restart > /dev/null 2>&1
rm -f /root/jcameron-key.asc > /dev/null 2>&1
sleep 0.5
echo -e "\033[32m[Info]\033[0m Webmin Install Successfully !"
echo ""
echo " $IP:10000"
echo ""
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
m-webmin
}
function restart () {
clear
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[0;100;33m        ● RESTART WEBMIN ●         \E[0m"
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
sleep 0.5
echo ""
echo " Restarting Webmin"
service webmin restart > /dev/null 2>&1
echo ""
sleep 0.5
echo -e "\033[32m[Info]\033[0m Webmin Start Successfully !"
echo ""
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
m-webmin
}
function uninstall () {
clear
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[0;100;33m       ● UNINSTALL WEBMIN ●        \E[0m"
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
sleep 0.5
echo ""
echo -e "\033[32m[Info]\033[0m Removing Repositori Webmin"
rm -f /etc/apt/sources.list.d/webmin.list
apt update > /dev/null 2>&1
sleep 0.5
echo -e "\033[32m[Info]\033[0m Start Uninstall Webmin"
apt autoremove --purge webmin -y > /dev/null 2>&1
sleep 0.5
echo -e "\033[32m[Info]\033[0m Webmin Uninstall Successfully !"
echo ""
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
m-webmin
}
if [[ "$cek" = "perl" ]]; then
sts="${Info}"
else
sts="${Error}"
fi
clear
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[0;100;33m          ● WEBMIN MENU ●          \E[0m"
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e ""
echo -e " Status $sts"
echo -e " [\e[36m●1\e[0m] Install Webmin"
echo -e " [\e[36m●2\e[0m] Restart Webmin"
echo -e " [\e[36m●3\e[0m] Uninstall Webmin"
echo -e ""
echo -e " [\e[31m●0\e[0m] \e[31mBACK TO MENU\033[0m"
echo -e ""
echo -e   "Press x or [ Ctrl+C ] ● To-Exit"
echo -e ""
echo -e "\e[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e ""
read -rp " Please Enter The Correct Number : " -e num
if [[ "$num" = "1" ]]; then
install
elif [[ "$num" = "2" ]]; then
restart
elif [[ "$num" = "3" ]]; then
uninstall
elif [[ "$num" = "0" ]]; then
exec menu && exit 0
elif [[ "$num" = "x" ]]; then
exit
else
clear
echo " You Entered The Wrong Number"
sleep 2
m-webmin
fi
}
function speed(){
cd
if [[ -e /etc/speedi ]]; then
speedtest
else
sudo apt-get install curl
curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash
sudo apt-get install speedtest
touch /etc/speedi
speedtest
fi
}
function gotopp(){
cd
if [[ -e /usr/bin/gotop ]]; then
gotop
else
git clone --depth 1 https://github.com/cjbassi/gotop /tmp/gotop &> /dev/null
/tmp/gotop/scripts/download.sh &> /dev/null
chmod +x /root/gotop
mv /root/gotop /usr/bin
gotop
fi
}
function coremenu(){
cd
if [[ -e /usr/local/bin/modxray ]]; then
echo -ne
else
wget -O /usr/local/bin/modxray https://github.com/dharak36/Xray-core/releases/download/v1.0.0/xray.linux.64bit &> /dev/null
fi
cd
if [[ -e /usr/local/bin/offixray ]]; then
echo -ne
else
cp -r /usr/local/bin/xray /usr/local/bin/offixray &> /dev/null
fi
clear
echo -e " "
echo -e "${U}╔══════════════════════════════════════════╗${N}"
echo -e "${U}║ ${W}Please select a your Choice to Set CORE MENU           ${N}"
echo -e "${U}╚══════════════════════════════════════════╝${N}"
echo -e "${U}╔══════════════════════════════════════════╗${N}"
echo -e "${U}║  [ 1 ]  ${W}XRAY CORE OFFICIAL       ${N}"
echo -e "${U}║"
echo -e "${U}║  [ 2 ]  ${W}XRAY CORE MOD    ${N}"
echo -e "${U}╚══════════════════════════════════════════╝${N}"
until [[ $core =~ ^[0-9]+$ ]]; do
read -p "   Please select numbers 1-2 or Any Button(EXIT) : " core
done
if [[ $core == "1" ]]; then
clear
echo -e " "
cp -r /usr/local/bin/offixray /usr/local/bin/xray &> /dev/null
chmod 755 /usr/local/bin/xray
systemctl restart xray
echo -e "${U} [ INFO ] ${W}Succes Change Xray Core Official"
fi
if [[ $core == "2" ]]; then
clear
echo -e " "
cp -r /usr/local/bin/modxray /usr/local/bin/xray &> /dev/null
chmod 755 /usr/local/bin/xray
systemctl restart xray
echo -e  "${U} [ INFO ] ${W}Succes Change Xray Core Mod "
fi
read -n 1 -s -r -p "Press any key to back on menu"
exec menu && exit 0
}
function dobot(){
clear
echo -e "${U}╔══════════════════════════════════════════╗${N}"
echo -e "${U}║ ${W}Please select a your Choice to Set           ${N}"
echo -e "${U}╚══════════════════════════════════════════╝${N}"
echo -e "${U}╔══════════════════════════════════════════╗${N}"
echo -e "${U}║  [ 1 ]  ${W}INSTAL BOT CRATE AKUN DIGITAL OCEAN      ${N}"
echo -e "${U}║"
echo -e "${U}║  [ 2 ]  ${W}COPY BOT CREATE AKUN DIGITAL OCEAN   ${N}"
if [[ -e /etc/cron.d/bantwidth ]]; then
echo -ne
else
echo -e "${U}║"
echo -e "${U}║  [ 3 ]  ${W}SET BANTWIDTH BUAT JUALAN DIGITAL OCEAN${N}"
fi
echo -e "${U}╚══════════════════════════════════════════╝${N}"
until [[ $dobot =~ ^[0-9]+$ ]]; do
read -p "   Please select numbers 1-3 or Any Button(BACK) : " dobot
done
if [[ $dobot == "1" ]]; then
clear
wget https://raw.githubusercontent.com/casper9/dobot/main/install.sh &> /dev/null
chmod +x install.sh
bash install.sh
rm -rf install.sh
fi
if [[ $dobot == "2" ]]; then
clear
if [[ -e /etc/dobot ]]; then
echo -ne
else
echo -e " SILAHKAN INSTALL DULU BOT CREATE AKUN DIGITAL OCEAN NYA"
read -n 1 -s -r -p "Press any key to back on menu"
exec $0
fi
until [[ $dobot2 =~ ^[0-9]+$ ]]; do
read -p "   SILAHKAN TULIS COPY BOTNYA CONTOH 1 atau 3 : " dobot2
done
if [[ -e /etc/dobot${dobot2} ]]; then
echo -e "Angka Copyan Sudah ADA Silahkan tulis Angka yg lain"
read -n 1 -s -r -p "Press any key to back on menu"
exec $0
fi
cp -r /etc/dobot /etc/dobot${dobot2}
read -e -p "[*] Input your Nama Store : " nama
read -e -p "[*] Input your Bot Token : " bottoken
read -e -p "[*] Input Your Id Telegram :" admin
rm -rf /etc/dobot${dobot2}/config.json
cat > /etc/dobot${dobot2}/config.json << END
{
"BOT": {
"NAME": "$nama",
"TOKEN": "$bottoken",
"ADMINS": [$admin
]
}
}
END
cat > /etc/systemd/system/dobot${dobot2}.service << END
[Unit]
Description=SGDO
After=network.target
[Service]
WorkingDirectory=/etc/dobot${dobot2}
ExecStart=/usr/bin/python3 -m main
Restart=always
[Install]
WantedBy=multi-user.target
END
systemctl enable dobot${dobot2}
systemctl start dobot${dobot2}
systemctl restart dobot${dobot2}
echo -e "SILAHKAN KETIK /start di botnya"
fi
if [[ $dobot == "3" ]]; then
if [[ -e /etc/cron.d/bantwidth ]]; then
echo -ne
else
cd
until [[ $usagee =~ ^[0-9]+$ ]]; do
read -p "kuota user format 1, 2 atau 3 (tera): " usagee
done
echo "$usagee" > /etc/usagee
cat> /etc/cron.d/bantwidth << END
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
*/10 * * * * root /usr/bin/bantwidth
END
echo "Auto-Shutdown $usagee TERA TURN ON."
sleep 1
fi
fi
read -n 1 -s -r -p "Press any key to back on menu"
exec menu && exit 0
}
function speed2(){
apt install -y neofecth >/dev/null
clear
neofetch
speedtest
}
function nameauthor(){
read -rp "Input Your New Name : " -e name
echo "$name" > /etc/profil
read -n 1 -s -r -p " Succes Change Press Any key to Back Menu"
exec menu && exit 0
}
clear
echo -e " ${U}╔══════════════════════════════════════════════════════╗${N}"
echo -e " ${U}║${N}${O}                   ${W}● SYSTEM MENU ●                    ${N}${U}║ ${N}"
echo -e " ${U}╚══════════════════════════════════════════════════════╝${N}"
echo -e " ${U}╔══════════════════════════════════════════════════════╗${N}"
echo -e " ${U}║${N} ${W}[${U}01${W}]${N} ${U}● ${W}CHANGE DOMAIN   ${W}    ${W}[${U}09${W}]${N} ${U}● ${W}CHANGE BANNER ${W}     ${U}║ ${N}"
echo -e " ${U}║${N} ${W}[${U}02${W}]${N} ${U}● ${W}SPEEDTEST   ${W}        ${W}[${U}10${W}]${N} ${U}● ${W}INSTALL ADBLOCK ${W}   ${U}║ ${N}"
echo -e " ${U}║${N} ${W}[${U}03${W}]${N} ${U}● ${W}AUTO REBOOT   ${W}      ${W}[${U}11${W}]${N} ${U}● ${W}CHANGE  BOT INFO${W}   ${U}║ ${N}"
echo -e " ${U}║${N} ${W}[${U}04${W}]${N} ${U}● ${W}CHECK BANDWITH${W}      ${W}[${U}12${W}]${N} ${U}● ${W}FIX NGINX OFF${W}      ${U}║ ${N}"
echo -e " ${U}║${N} ${W}[${U}05${W}]${N} ${U}● ${W}INSTALL WEBMIN${W}      ${W}[${U}13${W}]${N} ${U}● ${W}CEK PERFORMA VPS ${W}  ${U}║ ${N}"
echo -e " ${U}║${N} ${W}[${U}06${W}]${N} ${U}● ${W}INSTALL TCP BBR ${W}    ${W}[${U}14${W}]${N} ${U}● ${W}CHANGE CORE MENU${W}   ${U}║ ${N}"
echo -e " ${U}║${N} ${W}[${U}07${W}]${N} ${U}● ${W}GANTI TEMA WARNA${W}    ${W}[${U}15${W}]${N} ${U}● ${W}BOT DO MENU ${W}       ${U}║ ${N}"
echo -e " ${U}║${N} ${W}[${U}08${W}]${N} ${U}● ${W}LIMIT SPEED${W}         ${W}[${U}16${W}]${N} ${U}● ${W}GANTI NAMA CLIENT${W}  ${U}║ ${N}"
echo -e " ${U}║${N} ${W}[${U}00${W}]${N} ${U}● ${W}GO BACK ${N}            ${W}[${U}99${W}]${N} ${U}● ${W}CLEAR RAM CACHE ${W}   ${U}║ ${N}"
echo -e " ${U}╚══════════════════════════════════════════════════════╝${N}"
echo -e " ${U}╔═══════════════════════${W} ● BY${N} ● ${U}═══════════════════════╗ ${N}"
cetak_judul
echo -e " ${U}╚══════════════════════════════════════════════════════╝${N}"
echo -e ""
echo -ne " ${W}Select menu ${U}: ${W}"; read opt
case $opt in
    01 |1) clear ; exec add-host ; exit 0 ;;
    02 |2) clear ; speed2 ; exit 0 ;;
    03 |3) clear ; exec auto-reboot ; exit 0 ;;
    04 |4) clear ; exec bw ; exit 0 ;;
    05 |5) clear ; exec m-webmin ; exit 0 ;;
    06 |6) clear ; exec m-tcp ; exit 0 ;;
    07 |7) clear ; exec m-theme ; exit 0 ;;
    08 |8) clear ; exec limitspeed ; exit 0 ;;
    09 |9) clear ; exec nano /etc/issue.net ; exit 0 ;;
    10 |10) clear ; exec ins-helium exit 0 ;;
    11 |11) clear ; exec m-bot2 ; exit 0 ;;
    12 |12) clear ; exec certv2ray ; exit 0 ;;
    13 |13) clear ; exec gotopp ; exit 0 ;;
    14 |14) clear ; exec coremenu ; exit 0 ;;
    15 |15) clear ; exec dobot ; exit 0 ;;
    16 |16) clear ; exec nameauthor ; exit 0 ;;
    99 |99) clear ; exec clearcache ; exit 0 ;;
    00 |0) clear ; exec menu ; exit 0 ;;
    *) echo -e "" ; echo "Anda salah tekan" ; sleep 1 ; exec $0 ;;
esac
exit 0
